
const fs = require('fs'); const path = require('path'); const {validateTransferReceipt} = require('./paymentValidation'); const whatsappProvider = require('./whatsappProvider'); const ORDERS_FILE = path.join(__dirname,'../../data/orders.json'); if(!fs.existsSync(ORDERS_FILE)) fs.writeFileSync(ORDERS_FILE, JSON.stringify([]));
async function createOrder(payload,file){ const orders = JSON.parse(fs.readFileSync(ORDERS_FILE)); const id = Date.now().toString(); const payment_method = payload.payment_method || 'cash'; let payment_valid = null; if(payment_method === 'transfer'){ const check = await validateTransferReceipt(file, payload.expected_account); payment_valid = check.valid; } const order = { id, customer_name: payload.customer_name || payload.phone || 'cliente', address: payload.address || 'por confirmar', phone: payload.phone || 'no disponible', items: payload.items? JSON.parse(payload.items) : [], total: payload.total||0, payment_method, payment_proof: file? {path:file.path, originalname:file.originalname}:null, payment_valid, branch_id: payload.branch_id || null, status:'received', created_at: new Date() }; orders.push(order); fs.writeFileSync(ORDERS_FILE, JSON.stringify(orders,null,2)); await whatsappProvider.sendMessage(process.env.DEFAULT_BRANCH_NUMBER || 'whatsapp:0000', `Nuevo pedido ${order.id} - ${order.customer_name}`); return order; }
async function listOrders(){ return JSON.parse(fs.readFileSync(ORDERS_FILE)); }
module.exports = {createOrder, listOrders};
